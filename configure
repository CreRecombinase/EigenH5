#!/bin/bash
# Configuation script for EigenH5 that finds zstd and hdf5 by Nicholas Knoblauch 2019
# Script (heavily) inspired by (and borrowed from) Anticonf (tm) script by Jeroen Ooms (2017)
# This script will query 'pkg-config' for the required cflags and ldflags.
# If pkg-config is unavailable or does not find the library, try setting
# INCLUDE_DIR and LIB_DIR manually via e.g:
# R CMD INSTALL --configure-vars='INCLUDE_DIR=/.../include LIB_DIR=/.../lib'

# Library settings
PKG_CONFIG_NAME="libzstd"
PKG_DEB_NAME="libzstd-dev"
PKG_RPM_NAME="libzstd-devel"
PKG_CSW_NAME="libzstd_dev"
PKG_BREW_NAME="libzstd"
PKG_TEST_HEADER="<zstd.h>"
PKG_LIBS="-lzstd"
PKG_CFLAGS=""

# Use pkg-config if available
if [ $(command -v pkg-config) ]; then
  PKGCONFIG_CFLAGS=$(pkg-config --cflags --silence-errors ${PKG_CONFIG_NAME})
  PKGCONFIG_LIBS=$(pkg-config --libs ${PKG_CONFIG_NAME})
  PKGCONFIG_MODVERSION=$(pkg-config --modversion --silence-errors ${PKG_CONFIG_NAME})
fi

# Note that cflags may be empty in case of success
if [ "$INCLUDE_DIR" ] || [ "$LIB_DIR" ]; then
  echo "Found INCLUDE_DIR and/or LIB_DIR!"
  PKG_CFLAGS="-I$INCLUDE_DIR $PKG_CFLAGS"
  PKG_LIBS="-L$LIB_DIR $PKG_LIBS"
elif [ "$PKGCONFIG_CFLAGS" ] || [ "$PKGCONFIG_LIBS" ]; then
  echo "Found pkg-config cflags and libs!"
  PKG_CFLAGS=${PKGCONFIG_CFLAGS}
  PKG_LIBS=${PKGCONFIG_LIBS}
elif [[ "$OSTYPE" == "darwin"* ]]; then
  if [ $(command -v brew) ]; then
    BREWDIR=$(brew --prefix)
  else
    curl -sfL "https://jeroen.github.io/autobrew/$PKG_BREW_NAME" > $TMPDIR/autobrew
    source $TMPDIR/autobrew
  fi
  PATH="$BREWDIR/opt/$PKG_BREW_NAME/bin:$PATH"
  PKG_CFLAGS="-I$BREWDIR/opt/$PKG_BREW_NAME/include"
  PKG_LIBS="-L$BREWDIR/opt/$PKG_BREW_NAME/lib $PKG_LIBS"
fi

# For debugging
echo "Using PKG_CFLAGS=$PKG_CFLAGS"
echo "Using PKG_LIBS=$PKG_LIBS"

# Find compiler
CXXCPP=$(${R_HOME}/bin/R CMD config CXXCPP)
CXXFLAGS=$(${R_HOME}/bin/R CMD config CXXFLAGS)
CPPFLAGS=$(${R_HOME}/bin/R CMD config CPPFLAGS)

if [ $(command -v h5cc) ]; then
    H5ROOT=$(h5cc -showconfig | grep 'Installation' | awk '{print $3}')
    if [ -a "${H5ROOT}/include/hdf5.h" ] && [ -a "${H5ROOT}/include/hdf5_hl.h" ]; then
	PKG_CFLAGS+="-I${H5ROOT}/include/"
    else
	echo "${H5ROOT}/include/hdf5.h NOT FOUND"
	exit 1;
    fi
    if [ -a "${H5ROOT}/lib/libhdf5.a" ] && [ -a "${H5ROOT}/lib/libhdf5_hl.a" ]; then
	PKG_LIBS+="${H5ROOT}/lib/libhdf5.a ${H5ROOT}/lib/libhdf5_hl.a"
	PKG_LIBS+=$(h5cc -showconfig | grep 'Extra libraries:' | sed -E "s|.+Extra libraries:||")
	#	PKG_LIBS+=$(h5cc -showconfig | grep -w 'LDFLAGS' | sed -E "s| +LDFLAGS:||")
    else
	echo "${H5ROOT}/lib/libhdf5.a or ${H5ROOT}/lib/libhdf5_hl.a NOT FOUND"
	exit 1;
    fi
fi




# Test configuration
echo "#include $PKG_TEST_HEADER" | ${CXXCPP} ${CPPFLAGS} ${PKG_CFLAGS} ${CXXFLAGS} -xc++ - >/dev/null

# Customize the error
if [ $? -ne 0 ]; then
  echo "------------------------- ANTICONF ERROR ---------------------------"
  echo "Configuration failed because $PKG_CONFIG_NAME was not found. Try installing:"
  echo " * deb: $PKG_DEB_NAME (Debian, Ubuntu, etc)"
  echo " * rpm: $PKG_RPM_NAME (Fedora, EPEL)"
  echo " * csw: $PKG_CSW_NAME (Solaris)"
  echo " * brew: $PKG_BREW_NAME (OSX)"
  echo "If $PKG_CONFIG_NAME is already installed, check that 'pkg-config' is in your"
  echo "PATH and PKG_CONFIG_PATH contains a $PKG_CONFIG_NAME.pc file. If pkg-config"
  echo "is unavailable you can set INCLUDE_DIR and LIB_DIR manually via:"
  echo "R CMD INSTALL --configure-vars='INCLUDE_DIR=... LIB_DIR=...'"
  echo "--------------------------------------------------------------------"
  exit 1;
fi

# Write to Makevars
sed -e "s|@cflags@|$PKG_CFLAGS|" -e "s|@libs@|$PKG_LIBS|" src/Makevars.in > src/Makevars



# Success
exit 0
